Script started on Tue 28 Apr 2020 10:32:49 PM EEST
eina.theina.theina.ththeory  is ls
SPCHK: array declaration: declaring a size - 1 variable `a.size_minus_1' associated with the array.
SPCHK: warning: value `0' already declared.
Parsing Complete
SPCHK: formula 0: (and (and (<= 0 left) (<= left right)) (<= right a.size_minus_1)).
SPCHK: formula 1: (and (<= left i) (<= i right)).
SPCHK: formula 2: (= e (select a i)).
3
(and (and (<= 0 left) (<= left right)) (<= right a.size_minus_1))
(and (<= left i) (<= i right))
(= e (select a i))
name : eina.thSPCHK: building SMT formulae from vocab...
(benchmark SMT: extrafuns( (a (Array Int Int)) (a.size_minus_1 Int) (left Int) (right Int) (e Int) (i Int)) :formula (and (and (<= 0 left) (<= left right)) (<= right a.size_minus_1)) :formula ( not ( (and (and (<= 0 left) (<= left right)) (<= right a.size_minus_1))) )  :formula (and (<= left i) (<= i right)) :formula ( not ( (and (<= left i) (<= i right))) )  :formula (= e (select a i)) :formula ( not ( (= e (select a i))) ) )
SPCHK: parsing SMT formulae...
SPCHK: made 7 declarations as follows.
SPCHK:   0; NAME:i; DCL:(define i Int); AST:d4fa68
SPCHK:   1; NAME:a; DCL:(define a (Array Int Int)); AST:d4faa8
SPCHK:   2; NAME:a.size_minus_1; DCL:(define a.size_minus_1 Int); AST:d4fa48
SPCHK:   4; NAME:left; DCL:(define left Int); AST:d4fa08
SPCHK:   5; NAME:right; DCL:(define right Int); AST:d4fa28
SPCHK:   6; NAME:e; DCL:(define e Int); AST:d4fa88
SPCHK: asserting 3 retractable formulas and their negations...
SPCHK:   formula 0: (and (and (<= 0 left) (<= left right)) (<= right a.size_minus_1))
SPCHK:   formula 1: (and (<= left i) (<= i right))
SPCHK:   formula 2: (= e (select a i))
eina.thhelloz mo
SPCHK: enumerating vocab evaluations using recursive traversal...
name testls
name testls
name testls
name testls
SPCHK: checking choice...[1 1 1 ]
SPCHK: Calling SMT Solver. This may take time..
SPCHK: choice is satisfiable. 
       Is the satisfying assignment below a good model for your property?
       Notice that a specification accepts a don't care assignment. (this notice will be issued only twice).
  a[0:int] = 4:int, a[otherwise]= 4:int
  a.size_minus_1 = 0:int
  e = 4:int
  left = 0:int
  right = 0:int
SPCHK: Answer by 'Y' to accept and 'N' to reject the assignment. 'M' to view more details from the solver about the model. 
USER > ^C
Script done on Tue 28 Apr 2020 10:37:38 PM EEST
